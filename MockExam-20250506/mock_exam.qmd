---
title: "moch_exam"
author: "Sophia"
format: 
  html: default
  pdf: default
editor: visual
---

# Load required library

```{r}
#| message: false
#| waring: false
#| echo: true

rm(list=ls())

library(DBI)
library(dbplyr)
library(duckdb)
library(readxl)
library(writexl)
library(googlesheets4)
library(tidyverse)
library(janitor)
options(tibble.width=Inf)
```

# Data

## Load Dataset {.smaller}

Load `sales.xlsx` and check for potential data quality issues and correct variable types. Each row is uniquely identified by the combination of `customer_id`, `invoice_no`, and `stock_code`. More intuitively, each row represents one item purchased by a customer on a specific invoice.

```{r}
df <- read_xlsx('comp646_sa.xlsx')
str(df)

```

## Data Cleaning {.smaller}

The data appears free of major quality issues. However, the `quantity` variable is of type character and should be converted to numeric.

```{r}
sales <-
  df |> 
    mutate(quantity = parse_number(quantity))
str(sales)
```

## Compute Revenue at the Item-Invoice Level {.smaller}

We now compute the revenue for each item purchased, based on invoice and customer combinations. @tbl-dataset-overview shows the first five observations of the sales dataset.

```{r}
#| label: tbl-dataset-overview
#| tbl-cap: First five rows of the sales dataset
sales = sales |>
  tibble() |>
  mutate(revenue=unit_price*quantity) 

sales |>
  slice(1:5) |>
  gt()
```

#### Question 2

Compute the revenue stream for each item (row) using unit_price âˆ— quantity.Then aggregate the revenues by country and sort them in descending order by gross revenue.

```{r}

df_country <-
sales |> 
  mutate(revenue = unit_price *quantity) |> 
  group_by(country) |> 
  summarize(total_sales = sum(revenue)) |> 
  arrange(desc(total_sales))

df_country


```

#### Question 3

Create a bar chart using ggplot2 that displays sales by country in descending order. Which country generates the highest revenue for the company?

As we can see from the chart, United Kingdom has the highest revenue.

```{r}
ggplot(df_country, aes(y = reorder(country,total_sales,decreasing=FALSE), x = total_sales)) + 
  geom_col()
```

#### Question 4

What does the following function do, and what is its expected output?

It is a function to summarize selected country each day's total sales, and order by days asceding, and default country is New Zealand. result will return nothing, as there is no sale data for New Zealand

```{r}
daily_sales<-
  function(data, selected_country=
           'United Kingdom') {
  data$days = as.character(data$days)
  data |>
    filter(country == selected_country) |>
    select(country, year, month, days, revenue) |>
    group_by(days) |>
    summarize(daily_revenue = sum(revenue)) |>
    mutate(days = parse_number(days)) |>
    arrange(days)
}

sales |>
  daily_sales()
```

#### Question 5

Use the function and create a ggplot chart for output with respect to the United Kingdom.

```{r}
df |> 
  daily_sales('United Kingdom') |>
  ggplot(aes(x=days, y=daily_revenue))+
  geom_line()
```

#### Question 6

Calculate the total revenue generated by each customer.

Who is our top customer- the one generating the highest revenue?

customer_id=14646 has the highest revenue as we can see from the output

```{r}
df |> 
  drop_na(customer_id) |> 
  group_by(customer_id) |> 
  summarize(total = sum(revenue,na.rm = TRUE)) |> 
  arrange(desc(total)) |> 
  slice(1:5)
```

#### Question 7

Calculate the revenue for each invoice. Which invoice generated the highest revenue?

invoice_no =541431 has the highest revenue

```{r}
sales |> 
  group_by(invoice_no) |> 
  summarize(total = sum(revenue)) |> 
  arrange(desc(total)) |> 
  slice(1:5)
```

#### Question 8

It seems unusual that the highest invoice revenue exceeds the revenue from our top customer.

Why does this seem odd? Filter the data for:

-   the invoices of the customer who generated the highest overall revenue

    ```{r}
    sales |> 
      filter(customer_id == 14646) 
    ```

-   the invoice with the highest individual revenue.

    ```{r}
    sales |> 
      filter(invoice_no == 541431)
    ```

customer id for ths invoice no is 12346, filter with this customer id

```{r}
df |> 
  filter(customer_id == 12346)
```

We can see this customer has this invoice returned/refunded, therefore the total revenue of this customer is 0, that is why the highest invoice amount is not on that highest revenue customer
